version: "3.0"

services:
  nginx:
    container_name: sn_nginx
    image: nginx:latest
    ports:
      - "1080:80"
    volumes:
      - ./../:/var/www/sn
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - VIRTUAL_HOST=dev.sn,localhost
    links:
      - "php:php"
    networks:
      - sn_network

  php:
    container_name: sn_php
    build: ./php
    volumes:
      - ./../:/var/www/sn
    links:
      - "postgres:postgres"
      - "logstash:logstash"
    networks:
      - sn_network

  postgres:
    image: postgres:11
    container_name: sn_postgres
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_USER=snuser
      - POSTGRES_PASSWORD=snpswd
      - POSTGRES_DB=postgres
    networks:
      - sn_network

  logstash:
    container_name: sn_logstash
    image: docker.elastic.co/logstash/logstash:6.4.2
    ports:
      - "5001:5000"
      - "9601:9600"
      - "12201:12201/udp"
    networks:
      - sn_network
    volumes:
      - ./../:/var/www/sn
      - ./elk/logstash:/etc/logstash.d
    command: logstash -f /etc/logstash.d/logstash.conf
    links:
      - "elasticsearch:elasticsearch"

  kibana:
    container_name: sn_kibana
    image: docker.elastic.co/kibana/kibana:6.4.2
    ports:
      - "5602:5601"
    networks:
      - sn_network
    links:
      - "elasticsearch:elasticsearch"

  elasticsearch:
    container_name: sn_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    ports:
      - "9201:9200"
      - "9301:9300"
    networks:
      - sn_network

networks:
  sn_network:
    driver: bridge

